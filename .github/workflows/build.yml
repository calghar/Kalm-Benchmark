# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:
  
env:
  BIN_NAME: 'kalm-benchmark.whl'
  
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install poetry
      uses: Gr1N/setup-poetry@v7
      #with:
       # poetry-version: "1.2"
    - name: Install dependencies
      run: poetry install
    - run: poetry env list
    - name: Run Pre-Commit hooks
      run: poetry run pre-commit
    - name: Test with pytest
      run: poetry run pytest
    - name: build artifact
      run: poetry build -f wheel
    - name: story binary
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.BIN_NAME }}
        path: dist/kalm_benchmark-*.whl
  changes: # check which modules were changed
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      manifests: ${{ steps.filter.outputs.backend }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          manifests:
            - '**/manifest_generator/**/*.py'
  
  gen-manifests:
    needs: ["build", "changes"]
    # generate manifests only if files in the manifests module were changed
    if: ${{ needs.changes.outputs.manifests == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - uses: actions/download-artifact@v3
        name: Download Kalm-Benchmark
        with:
          name: ${{ env.BIN_NAME }}
      - name: Display structure of downloaded files
        run: ls -la
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Kalm-Benchmark
        run: pip install ${{ env.BIN_NAME }}
